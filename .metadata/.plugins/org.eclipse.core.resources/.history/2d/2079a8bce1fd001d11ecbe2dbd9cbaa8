package in.cybage.service;

import java.util.List;
import java.util.Random;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;

import in.cybage.bindings.ActivateAccount;
import in.cybage.bindings.Login;
import in.cybage.bindings.User;
import in.cybage.entity.UserMaster;
import in.cybage.repo.UserMasterRepo;

public class UserMgmtServiceImpl implements UserMgmtService {

	@Autowired
	private UserMasterRepo userMasterRepo;

	@Override
	public boolean saveuser(User user) {
		
		UserMaster entity = new UserMaster();
		BeanUtils.copyProperties(user, entity);

		entity.setPassword(generateRandomPwd());
		entity.setAccStatus("In-Active");
		
		UserMaster save = userMasterRepo.save(entity);

		//TODO: Send regisration email
		
		return save.getUserId()!=null;
	}

	@Override
	public boolean activateuserAcc(ActivateAccount activateAcc) {
	UserMaster user= new UserMaster();
	user.setEmail(activateAcc.getEmail());
	user.setPassword(activateAcc.getTempPwd());
		return false;
	}

	@Override
	public List<User> getAllUsers() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public User getUserById(Integer userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean deleteUserById(Integer userId) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean changesStatus(Integer userId, String accStatus) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public String login(Login login) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String forgotPwd(String email) {
		// TODO Auto-generated method stub
		return null;
	}

	private String generateRandomPwd() {

	     String CHAR_LOWERCASE = "abcdefghijklmnopqrstuvwxyz";
	     String CHAR_UPPERCASE = CHAR_LOWERCASE.toUpperCase();
	     String DIGIT = "0123456789";
	     int PASSWORD_LENGTH = 20;
	     
	     String alphaNumeric = CHAR_LOWERCASE + CHAR_UPPERCASE + DIGIT;
	     
	     StringBuilder sb = new StringBuilder();
	        Random result = new Random();
	        for (int i = 0; i < PASSWORD_LENGTH; i++) {
	            // produce a random order
	            int index = result.nextInt(alphaNumeric.length());
	            sb.append(alphaNumeric.charAt(index));
	        }
	        return result.toString();
	    }
}
